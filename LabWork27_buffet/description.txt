
Задание 1

- Сформировать структуру классов описывающую П.О.
- Можно использовать паттерны проектирования
- Одна иерархия классов
- Содержать боллее 8 классов
- Показать и объяснить использование инкапсуляции, полиморфизма и наследования

Что сделал:


Создал иерархию классов Person - Employee И Visitor
Для того чтобы показать полиморфизм содал метод Greetings, который возвращает разные строки в зависимости от типа
Чтоб показать инкапсуляцию - скрыл реализациюю setter-а у числовых поле
Ну а пример наследование эо как раз таки иерархия(наверн), и то что мы можем отправть любого наследника класса Person  в метод add Perosn

Где то есть печать прям в методах сервиса, за это не ругайтесь, переделаю в след лабах
Если надо, чтоб ручками не прописывать, могу сделать чтение с консоли всего

- заказ
- сменить обслугу
- посадить посетителей за стол
- добавить посетителя
- добавить стол
- добавить сотрудника
- очистить стол
- получить информацию

ПЕРЕДЕЛАННАЯ РАБОТА

Ему необходимо показать 8 классов связанные с темой
у нас есть
-Абстрактный класс сотрудник - его наследники работник и посетитель
- Класс паспортная дата(просто содержит имя, нужен чтоб просто было 8 класс, он бы сам скказал его добавтть если бы его не было)
- Заказ - список продуктов
- Столик - содержит список посетителей и заказов
- буффет (некий god object) 
Содержит список всех моделей
- продукты - те блюда

Меню короче сделал вот так
- в класс Program метода Main - записаны списки, который содержат элементы меню,
далее мы отправляем элементы главного еменю в класс коносольного взаимодействия, в метод select menu. От туда возврщается индекс выбранного элемнента.
Далее происходит switch caseб, и вызываются методы которые обработки определенных меню

==========
Лаба 2. Что добавил
Сделал коллекцию под Людей в заведении. 
Коллекция у нас обобщенная (дженерики), есть ограничение обобщения
Добавлена реализация интерфейса ICollection
- он подразумевает в себе методы: Add, Remove, CopyT0,Clear, Contains
- поля Count, IsReadOnly
- А так же методы GetEnumerator. Этотт метод вызывается когда наша колекция заосывается в цикл.
т.е. метод возвращает объект для итерации
Сделал список на массиве, чтоб у тебя была какая то приколюха хотя бы 
Так же добавил метод с полифорфным вызоваом - DisplayInfo


Теперь внутри нашего буфета, люди храняться в 2х кастомных списках, для посетителей и для работников


Дальше сраная коваринтность
Ковариантность: позволяет использовать более конкретный тип, чем заданный изначально
Обобщенный интерфейс становится коваринтым, когда мы добавлем приписку out
в классе Program я в самом низу добавил коваринтный интерфейс
В нем определе один ковариантый метод. Ковариантный метод - метод который возвращает объект с типом обобщения
Ковариантный интерефейс не может реализовывать методы которые принимают на вход тип Т - тип обобщения(это уже контрваирнтные методы)

=====
Лаба 3
Необходимо создать добавить сортировку в нашу кастомную коллекцию
А так же использование делегатов, мы возьмем делегат func
Для начала в классе нашей коллекции мы создали метод SortPersons
- он рализовывает пузырьковую сортровку, потому что она самая наглядная
В качестве входного параметра нам поступает делегат
Делегат - переменная содежащая в себе метод определенной сигнатру.(в нашем случает: Входные параметры два объекта типа T, Выходные параметры bool)
Этот делегат - функция которая сравнивает 2 объекта нашей коллекции и возврщает true, если первый элемент больше второго

Какие функции сравнения поступают?
я определил несколько вариавнтов сортировки
1. Сотрудники
-Пасп дата
- зп возраст
- зп убывание
2. Посетители
- пасп дата
- посадка убыв
- посадка возраст

Далее я определил в классе Person статический метод сравнения по паспортной дате.
Чтобы сравнивать объекты пользовательского класса, этот калс должен реализовывать интерфейс IComparable, реализацию добавил

В классе Employee и Visitor так же определи по 2 статических метода для сравнения. Что такое стаический метод я думаю ты знаешь

Где мы все это отправляем

В классе буфет я создал внизу 2 метода которые вызывают сортировки и передают в них методы - делегаты для сравнения
index приходит из меню

Чтоб простестить запутси прогу